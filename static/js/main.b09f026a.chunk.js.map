{"version":3,"sources":["components/summary.js","components/summarySet.js","App.js","index.js"],"names":["Summary","summaryObj","useState","useEffect","document","getElementById","summaryId","id","className","onClick","event","stopPropagation","contents","SummarySet","querySelectorAll","forEach","v","style","display","type","checked","target","i","classList","toggle","key","App","smrSet","isEditMode","setIsEditMode","querySelector","innerText","value","prev","ReactDOM","render","StrictMode"],"mappings":"iQAoCeA,G,KAjCC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACKC,oBAAS,GADd,6BAmB9B,OAJAC,qBAAU,WACIC,SAASC,eAAeJ,EAAWK,cAI7C,yBAAKC,GAAIN,EAAWK,UAAWE,UAAW,iBAAiBC,QAjBxC,SAACC,MAkBhB,0BAAMF,UAAU,iBACZ,0BAAMA,UAAU,uBAAsBC,QAhBzB,SAACC,GACtBA,EAAMC,qBAgBE,0BAAMH,UAAU,iBAAgBC,QAblB,SAACC,GACvBA,EAAMC,sBAcF,0BAAMH,UAAU,yBACZ,wBAAIA,UAAU,YAAYP,EAAWW,UACrC,8BAAUJ,UAAU,0BAA0BC,QAAS,SAAAC,GAAQA,EAAMC,yBCOtEE,MAlCf,WAsBI,OAJAV,qBAAU,WACNC,SAASU,iBAAiB,kBAAkBC,SAAQ,SAAAC,GAAIA,EAAEC,MAAMC,QAAQ,aAIxE,oCACA,2BAAOX,GAAG,OAAOY,KAAK,WAAWV,QArBxB,SAACC,GAAW,IAEPU,EACVV,EADAW,OAAUD,QAGdhB,SAASU,iBAAiB,gBAAgBC,SAAQ,SAACC,EAAGM,GAClDN,EAAEO,UAAUC,OAAO,aAAcJ,GACjCJ,EAAEO,UAAUC,OAAO,aAAcJ,MAErChB,SAASU,iBAAiB,kBAAkBC,SAAQ,SAACC,EAAGM,GACpDN,EAAEO,UAAUC,OAAO,aAAcJ,GACjCJ,EAAEO,UAAUC,OAAO,aAAcJ,SAWrC,yBAAKZ,UAAU,kBACX,kBAAC,EAAD,CAASP,WAAY,CAACK,UAAU,IAAIM,SAAS,2JAAoCa,IAAI,MACrF,kBAAC,EAAD,CAASxB,WAAY,CAACK,UAAU,IAAIM,SAAS,gJAAmCa,IAAI,MACpF,kBAAC,EAAD,CAASxB,WAAY,CAACK,UAAU,IAAIM,SAAS,oJAAkCa,IAAI,SCMhFC,MAhCf,WAAgB,IAEVC,EAFS,EACuBzB,oBAAS,GADhC,mBACN0B,EADM,KACMC,EADN,KAwBb,OAJA1B,qBAAU,WACRwB,EAAQvB,SAASU,iBAAiB,sBAIlC,yBAAKN,UAAU,OACb,4BAAQD,GAAG,UAAUE,QAvBJ,WACnBkB,EAAOZ,SAAQ,SAAAC,GACVY,GACDZ,EAAEc,cAAc,aAAaC,UAAYf,EAAEc,cAAc,kBAAkBE,MAC3EhB,EAAEc,cAAc,aAAab,MAAMC,QAAU,eAC7CF,EAAEc,cAAc,kBAAkBb,MAAMC,QAAU,SAElDF,EAAEc,cAAc,kBAAkBE,MAAQhB,EAAEc,cAAc,aAAaC,UACvEf,EAAEc,cAAc,aAAab,MAAMC,QAAU,OAC7CF,EAAEc,cAAc,kBAAkBb,MAAMC,QAAU,mBAGtDW,GAAc,SAAAI,GAAI,OAAKA,OAWwBL,EAAa,2BAAS,4BACnE,kBAAC,EAAD,Q,MC3BNM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhC,SAASC,eAAe,W","file":"static/js/main.b09f026a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport '../css/summary.css'\r\n\r\nconst Summary = ({summaryObj}) => {\r\n    const [isEditable,setIsEditable] = useState(false);\r\n    let thisSmr;\r\n    const onSummaryClick = (event) =>{\r\n    }\r\n\r\n    const onAddButtonClick = (event) =>{\r\n        event.stopPropagation();\r\n    }\r\n    \r\n    const onEditButtonClick = (event) =>{\r\n        event.stopPropagation();   \r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        thisSmr = document.getElementById(summaryObj.summaryId)\r\n    })\r\n\r\n    return(\r\n        <div id={summaryObj.summaryId} className ='smr_summarySet' onClick={onSummaryClick}>\r\n            <span className='smr_buttonSet'>\r\n                <span className='smr_addSummaryButton'onClick={onAddButtonClick}></span>\r\n                <span className='smr_editButton'onClick={onEditButtonClick}></span>\r\n            </span>\r\n            <span className='smr_summary font_sans'>\r\n                <h5 className='smr_text'>{summaryObj.contents}</h5>\r\n                <textarea className='smr_editInput font_sans' onClick={event=>{event.stopPropagation();}}/>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary;","import React, { useEffect } from 'react';\r\nimport Summary from './summary';\r\n\r\nfunction SummarySet(){\r\n\r\n\r\n    const test = (event) => {\r\n        const {\r\n            target: { checked }\r\n        } = event;\r\n\r\n        document.querySelectorAll('.smr_summary').forEach((v, i) => {\r\n            v.classList.toggle('font_sans', !checked);\r\n            v.classList.toggle('font_serif', checked);\r\n        })\r\n        document.querySelectorAll('.smr_editInput').forEach((v, i) => {\r\n            v.classList.toggle('font_sans', !checked);\r\n            v.classList.toggle('font_serif', checked);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        document.querySelectorAll('.smr_buttonSet').forEach(v=>{v.style.display='none'})\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <input id='test' type='checkbox' onClick={test}/>\r\n        <div className=\"summaryset_div\">\r\n            <Summary summaryObj={{summaryId:'1',contents:'이 사이트는 세줄로 요약하여 글을 작성하는 사이트입니다.'}} key='1' ></Summary>\r\n            <Summary summaryObj={{summaryId:'2',contents:'요약한 각각의 문장은 다시 세줄로 풀어쓸 수 있습니다.'}} key='2' ></Summary>\r\n            <Summary summaryObj={{summaryId:'3',contents:'모든 문장을 세줄로 나타내고나면 글쓰기가 완료됩니다.'}} key='3' ></Summary>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SummarySet;","import React, { useEffect, useState } from 'react';\nimport { unmountComponentAtNode } from 'react-dom';\nimport Summary from './components/summary';\nimport SummarySet from './components/summarySet';\n\nfunction App() {\n  const [isEditMode, setIsEditMode] = useState(false);\n  let smrSet;\n  const clickEditBtn = () => {\n    smrSet.forEach(v => {\n      if(isEditMode){\n        v.querySelector('.smr_text').innerText = v.querySelector('.smr_editInput').value;\n        v.querySelector('.smr_text').style.display = 'inline-block';\n        v.querySelector('.smr_editInput').style.display = 'none';\n      }else{\n        v.querySelector('.smr_editInput').value = v.querySelector('.smr_text').innerText;\n        v.querySelector('.smr_text').style.display = 'none';\n        v.querySelector('.smr_editInput').style.display = 'inline-block';\n      }\n    })\n    setIsEditMode(prev => !prev)\n  }\n  \n  \n\n  useEffect(()=>{\n    smrSet =document.querySelectorAll('.smr_summarySet');\n  })\n\n  return (\n    <div className=\"App\">\n      <button id='editBtn' onClick={clickEditBtn}>{isEditMode ? '수정완료' : '수정하기'}</button>\n      <SummarySet></SummarySet>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./css/main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}